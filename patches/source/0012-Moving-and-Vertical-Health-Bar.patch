From b06699b4990424d7d3ed53e18e392677fde68f2e Mon Sep 17 00:00:00 2001
From: l1ttleO <l1ttleofficial@outlook.com>
Date: Sat, 2 Jul 2022 14:48:00 +0500
Subject: [PATCH] Add visual option 'Health Bar Position' and make the health bar be able to move

---
 source/ClientPrefs.hx               |  5 +++
 source/PlayState.hx                 | 51 +++++++++++++++++++++++------
 source/options/VisualsUISubState.hx |  8 +++++
 3 files changed, 54 insertions(+), 10 deletions(-)

diff --git a/source/ClientPrefs.hx b/source/ClientPrefs.hx
index 10df0e3..46eff0a 100644
--- a/source/ClientPrefs.hx
+++ b/source/ClientPrefs.hx
@@ -72,6 +72,7 @@ class ClientPrefs {
 	public static var missAnimsSounds:Bool = true;
 	public static var advancedScoreTxt:Bool = true;
 	public static var scoreTxtUnderlayOpacity:Float = 0.3;
+	public static var healthBarType:String = 'Horizontal';
 
 	//Every key has two binds, add your key bind down here and then add your control on options/ControlsSubState.hx and Controls.hx
 	public static var keyBinds:Map<String, Array<FlxKey>> = [
@@ -153,6 +154,7 @@ class ClientPrefs {
 		FlxG.save.data.missAnimsSounds = missAnimsSounds;
 		FlxG.save.data.advancedScoreTxt = advancedScoreTxt;
 		FlxG.save.data.scoreTxtUnderlayOpacity = scoreTxtUnderlayOpacity;
+		FlxG.save.data.healthBarType = healthBarType;
 	
 		FlxG.save.flush();
 
@@ -303,6 +305,9 @@ class ClientPrefs {
 		if(FlxG.save.data.scoreTxtUnderlayOpacity != null) {
 			scoreTxtUnderlayOpacity = FlxG.save.data.scoreTxtUnderlayOpacity;
 		}
+		if(FlxG.save.data.healthBarType != null) {
+			healthBarType = FlxG.save.data.healthBarType;
+		}
 		
 		// flixel automatically saves your volume!
 		if(FlxG.save.data.volume != null)
diff --git a/source/PlayState.hx b/source/PlayState.hx
index d57d552..0d1ca17 100644
--- a/source/PlayState.hx
+++ b/source/PlayState.hx
@@ -1189,7 +1189,7 @@ class PlayState extends MusicBeatState
 		healthBarBG.y = FlxG.height * 0.89;
 		healthBarBG.screenCenter(X);
 		healthBarBG.scrollFactor.set();
-		healthBarBG.visible = !ClientPrefs.hideHud;
+		healthBarBG.visible = !ClientPrefs.hideHud && ClientPrefs.healthBarType != 'Disabled';
 		healthBarBG.xAdd = -4;
 		healthBarBG.yAdd = -4;
 		add(healthBarBG);
@@ -1199,25 +1199,26 @@ class PlayState extends MusicBeatState
 			'health', 0, 2);
 		healthBar.scrollFactor.set();
 		// healthBar
-		healthBar.visible = !ClientPrefs.hideHud;
+		healthBar.visible = !ClientPrefs.hideHud && ClientPrefs.healthBarType != 'Disabled';
 		healthBar.alpha = ClientPrefs.healthBarAlpha;
 		add(healthBar);
 		healthBarBG.sprTracker = healthBar;
 
 		iconP1 = new HealthIcon(boyfriend.healthIcon, true);
 		iconP1.y = healthBar.y - 75;
-		iconP1.visible = !ClientPrefs.hideHud;
+		iconP1.visible = !ClientPrefs.hideHud && ClientPrefs.healthBarType != 'Disabled';
 		iconP1.alpha = ClientPrefs.healthBarAlpha;
 		add(iconP1);
 
 		iconP2 = new HealthIcon(dad.healthIcon, false);
 		iconP2.y = healthBar.y - 75;
-		iconP2.visible = !ClientPrefs.hideHud;
+		iconP2.visible = !ClientPrefs.hideHud && ClientPrefs.healthBarType != 'Disabled';
 		iconP2.alpha = ClientPrefs.healthBarAlpha;
 		add(iconP2);
 		reloadHealthBarColors();
 
-		scoreTxt = new FlxText(0, healthBarBG.y + 36, FlxG.width, "", 20);
+		var downScrollAccount:Int = ClientPrefs.downScroll ? 5 : FlxG.height - 50;
+		scoreTxt = new FlxText(0, ClientPrefs.healthBarType == 'Horizontal' ? healthBarBG.y + 36 : downScrollAccount, FlxG.width, "", 20);
 		scoreTxt.setFormat(Paths.font("vcr.ttf"), ClientPrefs.advancedScoreTxt ? 18 : 20, FlxColor.WHITE, CENTER, FlxTextBorderStyle.OUTLINE, FlxColor.BLACK);
 		scoreTxt.scrollFactor.set();
 		scoreTxt.borderSize = 1.25;
@@ -1246,6 +1247,11 @@ class PlayState extends MusicBeatState
 		versionTxt.setFormat(Paths.font("vcr.ttf"), 16, FlxColor.WHITE, LEFT, FlxTextBorderStyle.OUTLINE, FlxColor.BLACK);
 		add(versionTxt);
 
+		if (ClientPrefs.healthBarType.startsWith('Vertical')) {
+			healthBar.angle = 90;
+			healthBar.x = ClientPrefs.healthBarType.endsWith('(left)') ? -245 : FlxG.width - 350;
+			healthBar.screenCenter(Y);
+		}
 		strumLineNotes.cameras = [camHUD];
 		grpNoteSplashes.cameras = [camHUD];
 		notes.cameras = [camHUD];
@@ -3059,11 +3065,36 @@ class PlayState extends MusicBeatState
 
 		var iconOffset:Int = 26;
 
-		iconP1.x = healthBar.x + (healthBar.width * (FlxMath.remapToRange(healthBar.percent, 0, 100, 100, 0) * 0.01)) + (150 * iconP1.scale.x - 150) / 2 - iconOffset;
-		iconP2.x = healthBar.x + (healthBar.width * (FlxMath.remapToRange(healthBar.percent, 0, 100, 100, 0) * 0.01)) - (150 * iconP2.scale.x) / 2 - iconOffset * 2;
-
-		if (health > 2)
-			health = 2;
+		var axis:Float = ClientPrefs.healthBarType == 'Horizontal' ? healthBar.x : FlxG.height * 0.11;
+		var newP1:Float = axis + ((healthBar.width * (FlxMath.remapToRange(healthPercentageBar, 0, 100, 100, 0) * 0.01)) + (150 * iconP1.scale.x - 150) / 2 - iconOffset);
+		var oldP2:Float = axis + ((healthBar.width * (FlxMath.remapToRange(healthBar.percent, 0, 100, 100, 0) * 0.01)) - (150 * iconP2.scale.x) / 2 - iconOffset * 2);
+		var newP2:Float = axis + ((healthBar.width * (FlxMath.remapToRange(healthPercentageBar, 0, 100, 100, 0) * 0.01)) - (150 * iconP2.scale.x) / 2 - iconOffset * 2);
+
+		if (ClientPrefs.healthBarType == 'Horizontal') {
+			iconP1.x = newP1;
+			iconP2.x = newP2;
+			if (healthPercentageBar > 100 || healthPercentageBar < 0 && !opponentPlay) {
+				healthBar.offset.x = oldP2 - newP2;
+				healthBarBG.offset.x = oldP2 - newP2;
+			} else {
+				healthBar.offset.x = 0;
+				healthBarBG.offset.x = 0;
+			}
+		} else {
+			iconP1.x = healthBar.x + 210;
+			iconP1.y = newP1;
+			iconP2.x = healthBar.x + 210;
+			iconP2.y = newP2;
+			if (healthPercentageBar > 100 || healthPercentageBar < 0 && !opponentPlay) {
+				healthBar.offset.y = oldP2 - newP2;
+				healthBarBG.offset.y = oldP2 - newP2;
+			} else {
+				healthBar.offset.y = 0;
+				healthBarBG.offset.y = 0;
+			}
+		}
+		/*if (health > 2)
+			health = 2;*/
 
 		if (healthPercentageBar < 20)
 			iconP1.animation.curAnim.curFrame = 1;
diff --git a/source/options/VisualsUISubState.hx b/source/options/VisualsUISubState.hx
index f4646d9..4ded12c 100644
--- a/source/options/VisualsUISubState.hx
+++ b/source/options/VisualsUISubState.hx
@@ -132,6 +132,14 @@ class VisualsUISubState extends BaseOptionsMenu
 		option.changeValue = 0.1;
 		option.decimals = 1;
 
+		var option:Option = new Option('Health Bar:',
+			"How should the Health Bar be positioned?",
+			'healthBarType',
+			'string',
+			'Horizontal',
+			['Vertical (left)', 'Vertical (right)', 'Horizontal', 'Disabled']);
+		addOption(option);
+
 		#if !mobile
 		var option:Option = new Option('FPS Counter',
 			'If unchecked, hides FPS Counter.',
-- 
2.34.1.windows.1

