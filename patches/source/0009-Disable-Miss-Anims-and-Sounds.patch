From 3acf15ae397b905c3eeb2cf010eacfa2a6d8cf04 Mon Sep 17 00:00:00 2001
From: l1ttleO <l1ttleofficial@outlook.com>
Date: Fri, 1 Jul 2022 21:44:06 +0500
Subject: [PATCH] Add gameplay option 'Play Miss Anims and Sounds'

---
 source/ClientPrefs.hx                      |  5 +++++
 source/PlayState.hx                        | 26 +++++++++++++++++-----
 source/options/GameplaySettingsSubState.hx |  7 ++++++
 3 files changed, 32 insertions(+), 6 deletions(-)

diff --git a/source/ClientPrefs.hx b/source/ClientPrefs.hx
index 7361c8a..3368b24 100644
--- a/source/ClientPrefs.hx
+++ b/source/ClientPrefs.hx
@@ -69,6 +69,7 @@ class ClientPrefs {
 	public static var missShakeIntensity:Float = 0;
 	public static var scoreSystem:String = 'Vanilla';
 	public static var accuracySystem:String = 'Psych';
+	public static var missAnimsSounds:Bool = true;
 
 	//Every key has two binds, add your key bind down here and then add your control on options/ControlsSubState.hx and Controls.hx
 	public static var keyBinds:Map<String, Array<FlxKey>> = [
@@ -147,6 +148,7 @@ class ClientPrefs {
 		FlxG.save.data.missShakeIntensity = missShakeIntensity;
 		FlxG.save.data.scoreSystem = scoreSystem;
 		FlxG.save.data.accuracySystem = accuracySystem;
+		FlxG.save.data.missAnimsSounds = missAnimsSounds;
 	
 		FlxG.save.flush();
 
@@ -288,6 +290,9 @@ class ClientPrefs {
 		if(FlxG.save.data.accuracySystem != null) {
 			accuracySystem = FlxG.save.data.accuracySystem;
 		}
+		if(FlxG.save.data.missAnimsSounds != null) {
+			missAnimsSounds = FlxG.save.data.missAnimsSounds;
+		}
 		
 		// flixel automatically saves your volume!
 		if(FlxG.save.data.volume != null)
diff --git a/source/PlayState.hx b/source/PlayState.hx
index 6d8a3d0..42ed24d 100644
--- a/source/PlayState.hx
+++ b/source/PlayState.hx
@@ -4226,9 +4226,9 @@ class PlayState extends MusicBeatState
 				}
 				else{
 					callOnLuas('onGhostTap', [key]);
-					if (canMiss) {
+					//if (canMiss) {
 						noteMissPress(key);
-					}
+					//}
 				}
 
 				// I dunno what you need this for but here you go
@@ -4374,6 +4374,7 @@ class PlayState extends MusicBeatState
 				note.destroy();
 			}
 		});
+		var prevCombo:Int = combo;
 		combo = 0;
 		health -= daNote.missHealth * healthLoss;
 		
@@ -4413,22 +4414,35 @@ class PlayState extends MusicBeatState
 		}
 
 		FlxG.camera.shake(ClientPrefs.missShakeIntensity * 0.01, 0.5, null, true, singAnimations[Std.int(Math.abs(daNote.noteData))].endsWith('UP') || singAnimations[Std.int(Math.abs(daNote.noteData))].endsWith('DOWN') ? flixel.util.FlxAxes.Y : flixel.util.FlxAxes.X);
+		if (ClientPrefs.missAnimsSounds) {
 		if(char != null && !daNote.noMissAnimation && char.hasMissAnimations)
 		{
 			var animToPlay:String = singAnimations[Std.int(Math.abs(daNote.noteData))] + 'miss' + daNote.animSuffix;
 			char.playAnim(animToPlay, true);
 		}
+		if (prevCombo >= 10 || totalPlayed == 1) FlxG.sound.play(Paths.soundRandom('missnote', 1, 3), FlxG.random.float(0.1, 0.2));
+		}
 
 		callOnLuas('noteMiss', [notes.members.indexOf(daNote), daNote.noteData, daNote.noteType, daNote.isSustainNote]);
 	}
 
 	function noteMissPress(direction:Int = 1):Void //You pressed a key when there was no notes to press for this key
 	{
-		if(ClientPrefs.ghostTapping) return; //fuck it
+		//if(ClientPrefs.ghostTapping) return; //fuck it
 
 		if (!boyfriend.stunned)
 		{
 			var char:Character = opponentPlay ? dad : boyfriend;
+			if (ClientPrefs.missAnimsSounds) {
+				if (char.hasMissAnimations) char.playAnim(singAnimations[Std.int(Math.abs(direction))] + 'miss', true);
+				if (!ClientPrefs.ghostTapping) FlxG.sound.play(Paths.soundRandom('missnote', 1, 3), FlxG.random.float(0.1, 0.2));
+			}
+			if (ClientPrefs.ghostTapping) {
+
+
+
+				return;
+			}
 			health -= 0.05 * healthLoss;
 			if(instakillOnMiss)
 			{
@@ -4450,7 +4464,7 @@ class PlayState extends MusicBeatState
 			totalPlayed++;
 			RecalculateRating(true);
 
-			FlxG.sound.play(Paths.soundRandom('missnote', 1, 3), FlxG.random.float(0.1, 0.2));
+			//FlxG.sound.play(Paths.soundRandom('missnote', 1, 3), FlxG.random.float(0.1, 0.2));
 			// FlxG.sound.play(Paths.sound('missnote1'), 1, false);
 			// FlxG.log.add('played imss note');
 
@@ -4470,9 +4484,9 @@ class PlayState extends MusicBeatState
 			}
 
 			FlxG.camera.shake(ClientPrefs.missShakeIntensity * 0.01, 0.5, null, true, singAnimations[Std.int(Math.abs(direction))].endsWith('UP') || singAnimations[Std.int(Math.abs(direction))].endsWith('DOWN') ? flixel.util.FlxAxes.Y : flixel.util.FlxAxes.X);
-			if(char.hasMissAnimations) {
+			/*if(char.hasMissAnimations) {
 				char.playAnim(singAnimations[Std.int(Math.abs(direction))] + 'miss', true);
-			}
+			}*/
 			vocals.volume = 0;
 		}
 		callOnLuas('noteMissPress', [direction]);
diff --git a/source/options/GameplaySettingsSubState.hx b/source/options/GameplaySettingsSubState.hx
index 1ae7d29..de29ee8 100644
--- a/source/options/GameplaySettingsSubState.hx
+++ b/source/options/GameplaySettingsSubState.hx
@@ -106,6 +106,13 @@ class GameplaySettingsSubState extends BaseOptionsMenu
 			['osu!mania (ScoreV2)', 'osu!mania (ScoreV1)', 'Psych']);
 		addOption(option);
 
+		var option:Option = new Option('Play Miss Anims and Sounds', //Name
+			"If unchecked, you will not see miss animations and won't\nhear miss sounds.", //Description
+			'missAnimsSounds', //Save data variable name
+			'bool', //Variable type
+			true); //Default value
+		addOption(option);
+
 		var option:Option = new Option('Rating Offset',
 			'Changes how late/early you have to hit for a "Sick!"\nHigher values mean you have to hit later.',
 			'ratingOffset',
-- 
2.34.1.windows.1

